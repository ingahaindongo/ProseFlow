// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProseFlow.Infrastructure.Data;

#nullable disable

namespace ProseFlow.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("ProseFlow.Core.Models.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActionGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<string>("ApplicationContext")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ExplainChanges")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OutputMode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActionGroupId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("ProseFlow.Core.Models.ActionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ActionGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAtUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "General",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("ProseFlow.Core.Models.CloudProviderConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProviderType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Temperature")
                        .HasColumnType("REAL");

                    b.Property<DateTimeOffset?>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CloudProviderConfigurations");
                });

            modelBuilder.Entity("ProseFlow.Core.Models.GeneralSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActionMenuHotkey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFloatingButtonHidden")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOnboardingCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LaunchAtLogin")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SmartPasteActionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SmartPasteHotkey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("StartMinimized")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkspaceSyncConflictStrategy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkspaceSyncMode")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GeneralSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionMenuHotkey = "Ctrl+J",
                            CreatedAtUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsFloatingButtonHidden = false,
                            IsOnboardingCompleted = false,
                            LaunchAtLogin = false,
                            SmartPasteHotkey = "Ctrl+Shift+V",
                            StartMinimized = false,
                            Theme = "System",
                            WorkspaceSyncConflictStrategy = 0,
                            WorkspaceSyncMode = 0
                        });
                });

            modelBuilder.Entity("ProseFlow.Core.Models.HistoryEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("CompletionTokens")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("InputText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("LatencyMs")
                        .HasColumnType("REAL");

                    b.Property<string>("ModelUsed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OutputText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("PromptTokens")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProviderUsed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<double>("TokensPerSecond")
                        .HasColumnType("REAL");

                    b.Property<DateTimeOffset?>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("History");
                });

            modelBuilder.Entity("ProseFlow.Core.Models.LocalModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("FileSizeGb")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsManaged")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FilePath")
                        .IsUnique();

                    b.ToTable("LocalModels");
                });

            modelBuilder.Entity("ProseFlow.Core.Models.ProviderSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EnableFlashAttention")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FallbackServiceType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GpuDeviceIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocalCpuCores")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LocalModelAutoUnloadEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocalModelContextSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocalModelIdleTimeoutMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LocalModelLoadOnStartup")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocalModelMaxTokens")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LocalModelMemoryMap")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LocalModelMemorylock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocalModelPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("LocalModelTemperature")
                        .HasColumnType("REAL");

                    b.Property<bool>("PreferGpu")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrimaryServiceType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProviderSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAtUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EnableFlashAttention = true,
                            FallbackServiceType = "None",
                            GpuDeviceIndex = -1,
                            LocalCpuCores = 4,
                            LocalModelAutoUnloadEnabled = true,
                            LocalModelContextSize = 4096,
                            LocalModelIdleTimeoutMinutes = 30,
                            LocalModelLoadOnStartup = false,
                            LocalModelMaxTokens = 2048,
                            LocalModelMemoryMap = true,
                            LocalModelMemorylock = false,
                            LocalModelPath = "",
                            LocalModelTemperature = 0.7f,
                            PreferGpu = true,
                            PrimaryServiceType = "Cloud"
                        });
                });

            modelBuilder.Entity("ProseFlow.Core.Models.UsageStatistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CompletionTokens")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("Month")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PromptTokens")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Year", "Month")
                        .IsUnique();

                    b.ToTable("UsageStatistics");
                });

            modelBuilder.Entity("ProseFlow.Core.Models.Action", b =>
                {
                    b.HasOne("ProseFlow.Core.Models.ActionGroup", "ActionGroup")
                        .WithMany("Actions")
                        .HasForeignKey("ActionGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionGroup");
                });

            modelBuilder.Entity("ProseFlow.Core.Models.ActionGroup", b =>
                {
                    b.Navigation("Actions");
                });
#pragma warning restore 612, 618
        }
    }
}
