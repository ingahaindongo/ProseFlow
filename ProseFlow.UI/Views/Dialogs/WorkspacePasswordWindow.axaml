<shadui:Window x:Class="ProseFlow.UI.Views.Dialogs.WorkspacePasswordWindow"
               xmlns="https://github.com/avaloniaui"
               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
               xmlns:vm="using:ProseFlow.UI.ViewModels.Dialogs"
               xmlns:shadui="clr-namespace:ShadUI;assembly=ShadUI"
               xmlns:icons="clr-namespace:ProseFlow.UI.Controls.Icons"
               mc:Ignorable="d" d:DesignWidth="400" d:DesignHeight="300"
               x:DataType="vm:WorkspacePasswordViewModel"
               Title="Workspace Password"
               SizeToContent="Height" Width="450"
               RequestedThemeVariant="Dark"
               WindowStartupLocation="CenterOwner" CanResize="False" ShowInTaskbar="False"
               Closing="OnClosing">

    <Window.Styles>
        <Style Selector="Border.StrengthBar">
            <Setter Property="Height" Value="5" />
            <Setter Property="Width" Value="60" />
            <Setter Property="CornerRadius" Value="2" />
            <Setter Property="Background" Value="{DynamicResource GhostColor}" />
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Property="Background" Duration="0.2" />
                </Transitions>
            </Setter>
        </Style>
        <Style Selector="Border.StrengthBar.very-weak">
            <Setter Property="Background" Value="Red" />
        </Style>
        <Style Selector="Border.StrengthBar.weak">
            <Setter Property="Background" Value="Orange" />
        </Style>
        <Style Selector="Border.StrengthBar.medium">
            <Setter Property="Background" Value="Yellow" />
        </Style>
        <Style Selector="Border.StrengthBar.strong">
            <Setter Property="Background" Value="LightGreen" />
        </Style>
        <Style Selector="Border.StrengthBar.very-strong">
            <Setter Property="Background" Value="Green" />
        </Style>

        <!-- Styles for Recommendation Items -->
        <Style Selector="StackPanel.recommendation TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource MutedColor}" />
        </Style>
        <Style Selector="StackPanel.recommendation icons|SymbolIcon">
            <Setter Property="Foreground" Value="{DynamicResource MutedColor}" />
        </Style>

        <Style Selector="StackPanel.recommendation.satisfied TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource SuccessColor}" />
        </Style>
        <Style Selector="StackPanel.recommendation.satisfied icons|SymbolIcon">
            <Setter Property="Foreground" Value="{DynamicResource SuccessColor}" />
        </Style>
    </Window.Styles>

    <Panel Margin="24">
        <StackPanel Spacing="16">
            <TextBlock Text="{Binding Title}" Classes="h4" />
            <TextBlock Text="{Binding Description}" TextWrapping="Wrap" Classes="Muted" />

            <TextBox shadui:ControlAssist.Label="Workspace Password"
                     PasswordChar="•" Classes="PasswordReveal"
                     Text="{Binding Password, Mode=TwoWay}" />

            <!-- Recommendations Checklist -->
            <StackPanel Spacing="4"
                        IsVisible="{Binding Mode, Converter={x:Static ObjectConverters.Equal}, ConverterParameter={x:Static vm:WorkspacePasswordMode.Create}}">
                <TextBlock Text="Recommendations" Classes="Small" Margin="0,4" />

                <StackPanel Orientation="Horizontal" Spacing="8" Classes="recommendation"
                            Classes.satisfied="{Binding HasMinimumLength}">
                    <icons:SymbolIcon Size="16"
                                      Symbol="{Binding HasMinimumLength, Converter={StaticResource ConditionCheckConverter}, ConverterParameter='true|Check|CircleDot'}"
                                      VerticalAlignment="Center" />
                    <TextBlock Text="At least 8 characters long" VerticalAlignment="Center" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Spacing="8" Classes="recommendation"
                            Classes.satisfied="{Binding HasUppercase}">
                    <icons:SymbolIcon Size="16"
                                      Symbol="{Binding HasUppercase, Converter={StaticResource ConditionCheckConverter}, ConverterParameter='true|Check|CircleDot'}"
                                      VerticalAlignment="Center" />
                    <TextBlock Text="Contains an uppercase letter (A-Z)" VerticalAlignment="Center" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Spacing="8" Classes="recommendation"
                            Classes.satisfied="{Binding HasLowercase}">
                    <icons:SymbolIcon Size="16"
                                      Symbol="{Binding HasLowercase, Converter={StaticResource ConditionCheckConverter}, ConverterParameter='true|Check|CircleDot'}"
                                      VerticalAlignment="Center" />
                    <TextBlock Text="Contains a lowercase letter (a-z)" VerticalAlignment="Center" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Spacing="8" Classes="recommendation"
                            Classes.satisfied="{Binding HasNumber}">
                    <icons:SymbolIcon Size="16"
                                      Symbol="{Binding HasNumber, Converter={StaticResource ConditionCheckConverter}, ConverterParameter='true|Check|CircleDot'}"
                                      VerticalAlignment="Center" />
                    <TextBlock Text="Contains a number (0-9)" VerticalAlignment="Center" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Spacing="8" Classes="recommendation"
                            Classes.satisfied="{Binding HasSymbol}">
                    <icons:SymbolIcon Size="16"
                                      Symbol="{Binding HasSymbol, Converter={StaticResource ConditionCheckConverter}, ConverterParameter='true|Check|CircleDot'}"
                                      VerticalAlignment="Center" />
                    <TextBlock Text="Contains a symbol (!, @, #, etc.)" VerticalAlignment="Center" />
                </StackPanel>
            </StackPanel>

            <!-- Password Strength Meter -->
            <Grid ColumnDefinitions="*, Auto" ColumnSpacing="12"
                  IsVisible="{Binding CurrentStrength, Converter={x:Static ObjectConverters.NotEqual}, ConverterParameter={x:Static vm:PasswordStrength.None}}">
                <StackPanel Grid.Column="0" Orientation="Horizontal" Spacing="4" VerticalAlignment="Center">
                    <Border Classes="StrengthBar"
                            Classes.very-weak="{Binding CurrentStrength, Converter={StaticResource ConditionCheckConverter}, ConverterParameter='VeryWeak;Weak;Medium;Strong;VeryStrong|true|false'}" />
                    <Border Classes="StrengthBar"
                            Classes.weak="{Binding CurrentStrength, Converter={StaticResource ConditionCheckConverter}, ConverterParameter='Weak;Medium;Strong;VeryStrong|true|false'}" />
                    <Border Classes="StrengthBar"
                            Classes.medium="{Binding CurrentStrength, Converter={StaticResource ConditionCheckConverter}, ConverterParameter='Medium;Strong;VeryStrong|true|false'}" />
                    <Border Classes="StrengthBar"
                            Classes.strong="{Binding CurrentStrength, Converter={StaticResource ConditionCheckConverter}, ConverterParameter='Strong;VeryStrong|true|false'}" />
                    <Border Classes="StrengthBar"
                            Classes.very-strong="{Binding CurrentStrength, Converter={StaticResource ConditionCheckConverter}, ConverterParameter='VeryStrong|true|false'}" />
                </StackPanel>
                <TextBlock Grid.Column="1" Text="{Binding StrengthText}"
                           Foreground="{Binding CurrentStrength, Converter={StaticResource PasswordStrengthToColorConverter}}"
                           FontWeight="Medium" VerticalAlignment="Center" />
            </Grid>

            <TextBox shadui:ControlAssist.Label="Confirm Password"
                     PasswordChar="•" Classes="PasswordReveal"
                     Text="{Binding ConfirmPassword}"
                     IsVisible="{Binding Mode, Converter={x:Static ObjectConverters.Equal}, ConverterParameter={x:Static vm:WorkspacePasswordMode.Create}}" />

            <TextBlock Text="{Binding ErrorMessage}" Classes="Small Destructive" IsVisible="{Binding !!ErrorMessage}" />

            <DockPanel>
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Spacing="8" HorizontalAlignment="Right">
                    <Button Classes="Primary" Content="Submit" IsDefault="True"
                            Command="{Binding SubmitCommand}" CommandParameter="{Binding $parent[Window]}" />
                    <Button Classes="Outline" Content="Cancel" IsCancel="True"
                            Command="{Binding CancelCommand}" CommandParameter="{Binding $parent[Window]}" />
                </StackPanel>
            </DockPanel>
        </StackPanel>
    </Panel>
</shadui:Window>